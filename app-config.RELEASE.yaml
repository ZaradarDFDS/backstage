app:
  title: Backstage DFDS
  baseUrl: https://backstage.dfds.cloud

backend:
  baseUrl: https://backstage.dfds.cloud/backend
  listen:
    port: 7000
  cors:
    origin: [https://backstage.dfds.cloud, http://localhost:3000, http://localhost:7000]
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection: 
      $secret:
        env: BACKSTAGE_DATABASE_CONNECTIONSTRING
proxy:
  '/circleci/api':
    target: 'https://circleci.com/api/v1.1'
    changeOrigin: true
    pathRewrite:
      '^/proxy/circleci/api/': '/'

organization:
  name: DFDS

techdocs:
  storageUrl: https://techdocs-mock-sites.storage.googleapis.com

sentry:
  organization: dfds

rollbar:
  organization: spotify
  accountToken:
    $secret:
      env: ROLLBAR_ACCOUNT_TOKEN  

auth:
  providers:
    google:
      development:
        appOrigin: "http://localhost:3000/"
        secure: false
        clientId:
          $secret:
            env: AUTH_GOOGLE_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_GOOGLE_CLIENT_SECRET
    github:
      development:
        appOrigin: "http://localhost:3000/"
        secure: false
        clientId:
          $secret:
            env: AUTH_GITHUB_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_GITHUB_CLIENT_SECRET
        enterpriseInstanceUrl:
          $secret:
            env: AUTH_GITHUB_ENTERPRISE_INSTANCE_URL
    gitlab:
      development:
        appOrigin: "http://localhost:3000/"
        secure: false
        clientId:
          $secret:
            env: AUTH_GITLAB_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_GITLAB_CLIENT_SECRET
        audience:
          $secret:
            env: GITLAB_BASE_URL
    # saml:
    #   development:
    #     entryPoint: "http://localhost:7001/"
    #     issuer: "passport-saml"
    okta:
      development:
        appOrigin: "http://localhost:3000/"
        secure: false
        clientId:
          $secret:
            env: AUTH_OKTA_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_OKTA_CLIENT_SECRET
        audience:
          $secret:
            env: AUTH_OKTA_AUDIENCE
    oauth2:
      development:
        appOrigin: "http://localhost:3000/"
        secure: false
        clientId:
          $secret:
            env: AUTH_OAUTH2_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_OAUTH2_CLIENT_SECRET
        authorizationURL:
          $secret:
            env: AUTH_OAUTH2_AUTH_URL
        tokenURL:
          $secret:
            env: AUTH_OAUTH2_TOKEN_URL

catalog:
  rules:
    - allow: [Component, API, Group, Template, Location]
  processors:
    github:
      providers:
        - target: https://github.com
          token:
            $secret:
              env: GITHUB_PRIVATE_TOKEN
    azureApi:
      privateToken:
        $secret:
          env: AZUREDEVOPS_AUTH_CREDENTIALS